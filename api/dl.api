syntax = "v1"

info (
	title: "深度学习微服务"
	desc: "深度学习微服务"
	author: "kongfuguagua"
	email: "hanmengqi@sjtu.edu.cn"
)

type (
	DLApp {
		Metadata DLMetadata `json:"metadata"`
		Spec     DLSpec     `json:"spec"`
	}
	DLMetadata {
		Id      string `json:"id"`
		Builder string `json:"builder"`
		DLName  string `json:"dlname"`
	}
	DLSpec {
		Model DLModel   `json:"dlmodel"`
		Data  DLDataOBJ `json:"dldataobj"`
	}
	DLModel {
		Name       string `json:"dlmodelname"`
		Path       string `json:"dlmodelpath"`
		Status     bool   `json:"dlmodelstatus"` //模型是否可用
		InputType  string `json:"dlinput"`
		OutputType string `json:"dloutput"`
	}

	DLDataOBJ {
		Database string `json:"database,omitempty"`
		Name     string `json:"name,omitempty"`
		Status   bool   `json:"status,omitempty"` // 该数据对象是否可用
		Total    int64  `json:"total,omitempty"`
		Type     string `json:"type,omitempty"`
	}

	DLData {
		Index  string `json:"index,omitempty"`
		Status bool   `json:"status,omitempty"` // 该数据是否可用
		Deal   string `json:"deal,omitempty"`   // 该数据结束到哪个流程了，后面这个要变成枚举
	}
)

type (
	DLGetRequest {
		Id string `json:"id"`
	}
	DLGetResponse {
		DL DLApp `json:"DL"`
	}
)

type (
	DLCreateRequest {
		Spec DLSpec `json:"spec"`
	}
	DLCreateResponse {
		Metadata DLMetadata `json:"metadata"`
	}
)

service dl-api {
	@handler GetDLHandler // TODO: set handler name and delete this comment
	get /dl/api/get (DLGetRequest) returns(DLGetResponse)
	
	@handler CreateDLHandler // TODO: set handler name and delete this comment
	post /dl/api/create (DLCreateRequest) returns (DLCreateResponse)
}