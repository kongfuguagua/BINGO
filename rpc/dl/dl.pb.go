// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.4
// source: dl.proto

package dl

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DLapp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *DLMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec     *DLSpec     `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *DLapp) Reset() {
	*x = DLapp{}
	mi := &file_dl_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLapp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLapp) ProtoMessage() {}

func (x *DLapp) ProtoReflect() protoreflect.Message {
	mi := &file_dl_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLapp.ProtoReflect.Descriptor instead.
func (*DLapp) Descriptor() ([]byte, []int) {
	return file_dl_proto_rawDescGZIP(), []int{0}
}

func (x *DLapp) GetMetadata() *DLMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DLapp) GetSpec() *DLSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DLMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	DLName    string `protobuf:"bytes,3,opt,name=DLName,proto3" json:"DLName,omitempty"`
}

func (x *DLMetadata) Reset() {
	*x = DLMetadata{}
	mi := &file_dl_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLMetadata) ProtoMessage() {}

func (x *DLMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_dl_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLMetadata.ProtoReflect.Descriptor instead.
func (*DLMetadata) Descriptor() ([]byte, []int) {
	return file_dl_proto_rawDescGZIP(), []int{1}
}

func (x *DLMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DLMetadata) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DLMetadata) GetDLName() string {
	if x != nil {
		return x.DLName
	}
	return ""
}

type DLSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model   *DLModel   `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	DataObj *DLDataOBJ `protobuf:"bytes,2,opt,name=dataObj,proto3" json:"dataObj,omitempty"`
}

func (x *DLSpec) Reset() {
	*x = DLSpec{}
	mi := &file_dl_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLSpec) ProtoMessage() {}

func (x *DLSpec) ProtoReflect() protoreflect.Message {
	mi := &file_dl_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLSpec.ProtoReflect.Descriptor instead.
func (*DLSpec) Descriptor() ([]byte, []int) {
	return file_dl_proto_rawDescGZIP(), []int{2}
}

func (x *DLSpec) GetModel() *DLModel {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *DLSpec) GetDataObj() *DLDataOBJ {
	if x != nil {
		return x.DataObj
	}
	return nil
}

type DLCreateSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	DLName    string `protobuf:"bytes,2,opt,name=DLName,proto3" json:"DLName,omitempty"`
	ModelName string `protobuf:"bytes,3,opt,name=modelName,proto3" json:"modelName,omitempty"`
}

func (x *DLCreateSpec) Reset() {
	*x = DLCreateSpec{}
	mi := &file_dl_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLCreateSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLCreateSpec) ProtoMessage() {}

func (x *DLCreateSpec) ProtoReflect() protoreflect.Message {
	mi := &file_dl_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLCreateSpec.ProtoReflect.Descriptor instead.
func (*DLCreateSpec) Descriptor() ([]byte, []int) {
	return file_dl_proto_rawDescGZIP(), []int{3}
}

func (x *DLCreateSpec) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DLCreateSpec) GetDLName() string {
	if x != nil {
		return x.DLName
	}
	return ""
}

func (x *DLCreateSpec) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

type DLModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Status     bool   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` // 模型是否可用
	InputType  string `protobuf:"bytes,4,opt,name=inputType,proto3" json:"inputType,omitempty"`
	OutputType string `protobuf:"bytes,5,opt,name=outputType,proto3" json:"outputType,omitempty"`
}

func (x *DLModel) Reset() {
	*x = DLModel{}
	mi := &file_dl_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLModel) ProtoMessage() {}

func (x *DLModel) ProtoReflect() protoreflect.Message {
	mi := &file_dl_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLModel.ProtoReflect.Descriptor instead.
func (*DLModel) Descriptor() ([]byte, []int) {
	return file_dl_proto_rawDescGZIP(), []int{4}
}

func (x *DLModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DLModel) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DLModel) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DLModel) GetInputType() string {
	if x != nil {
		return x.InputType
	}
	return ""
}

func (x *DLModel) GetOutputType() string {
	if x != nil {
		return x.OutputType
	}
	return ""
}

type DLDataOBJ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=Database,proto3" json:"Database,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status   bool   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` // 该数据对象是否可用
	Total    int64  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Type     string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DLDataOBJ) Reset() {
	*x = DLDataOBJ{}
	mi := &file_dl_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLDataOBJ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLDataOBJ) ProtoMessage() {}

func (x *DLDataOBJ) ProtoReflect() protoreflect.Message {
	mi := &file_dl_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLDataOBJ.ProtoReflect.Descriptor instead.
func (*DLDataOBJ) Descriptor() ([]byte, []int) {
	return file_dl_proto_rawDescGZIP(), []int{5}
}

func (x *DLDataOBJ) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DLDataOBJ) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DLDataOBJ) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DLDataOBJ) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DLDataOBJ) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type DLData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Status bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"` // 该数据是否可用
	Deal   string `protobuf:"bytes,3,opt,name=deal,proto3" json:"deal,omitempty"`      // 该数据结束到哪个流程了，后面这个要变成枚举
}

func (x *DLData) Reset() {
	*x = DLData{}
	mi := &file_dl_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLData) ProtoMessage() {}

func (x *DLData) ProtoReflect() protoreflect.Message {
	mi := &file_dl_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLData.ProtoReflect.Descriptor instead.
func (*DLData) Descriptor() ([]byte, []int) {
	return file_dl_proto_rawDescGZIP(), []int{6}
}

func (x *DLData) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *DLData) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DLData) GetDeal() string {
	if x != nil {
		return x.Deal
	}
	return ""
}

type DLGetRequestById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DLGetRequestById) Reset() {
	*x = DLGetRequestById{}
	mi := &file_dl_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLGetRequestById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLGetRequestById) ProtoMessage() {}

func (x *DLGetRequestById) ProtoReflect() protoreflect.Message {
	mi := &file_dl_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLGetRequestById.ProtoReflect.Descriptor instead.
func (*DLGetRequestById) Descriptor() ([]byte, []int) {
	return file_dl_proto_rawDescGZIP(), []int{7}
}

func (x *DLGetRequestById) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DLGetResponseById struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DlApp *DLapp `protobuf:"bytes,1,opt,name=dlApp,proto3" json:"dlApp,omitempty"`
}

func (x *DLGetResponseById) Reset() {
	*x = DLGetResponseById{}
	mi := &file_dl_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLGetResponseById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLGetResponseById) ProtoMessage() {}

func (x *DLGetResponseById) ProtoReflect() protoreflect.Message {
	mi := &file_dl_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLGetResponseById.ProtoReflect.Descriptor instead.
func (*DLGetResponseById) Descriptor() ([]byte, []int) {
	return file_dl_proto_rawDescGZIP(), []int{8}
}

func (x *DLGetResponseById) GetDlApp() *DLapp {
	if x != nil {
		return x.DlApp
	}
	return nil
}

type DLCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spec *DLCreateSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
}

func (x *DLCreateRequest) Reset() {
	*x = DLCreateRequest{}
	mi := &file_dl_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLCreateRequest) ProtoMessage() {}

func (x *DLCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dl_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLCreateRequest.ProtoReflect.Descriptor instead.
func (*DLCreateRequest) Descriptor() ([]byte, []int) {
	return file_dl_proto_rawDescGZIP(), []int{9}
}

func (x *DLCreateRequest) GetSpec() *DLCreateSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type DLCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DlApp *DLapp `protobuf:"bytes,1,opt,name=dlApp,proto3" json:"dlApp,omitempty"`
}

func (x *DLCreateResponse) Reset() {
	*x = DLCreateResponse{}
	mi := &file_dl_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLCreateResponse) ProtoMessage() {}

func (x *DLCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dl_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLCreateResponse.ProtoReflect.Descriptor instead.
func (*DLCreateResponse) Descriptor() ([]byte, []int) {
	return file_dl_proto_rawDescGZIP(), []int{10}
}

func (x *DLCreateResponse) GetDlApp() *DLapp {
	if x != nil {
		return x.DlApp
	}
	return nil
}

type SetDLModelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *SetDLModelRequest) Reset() {
	*x = SetDLModelRequest{}
	mi := &file_dl_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDLModelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDLModelRequest) ProtoMessage() {}

func (x *SetDLModelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dl_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDLModelRequest.ProtoReflect.Descriptor instead.
func (*SetDLModelRequest) Descriptor() ([]byte, []int) {
	return file_dl_proto_rawDescGZIP(), []int{11}
}

func (x *SetDLModelRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type SetDLDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Database string `protobuf:"bytes,1,opt,name=Database,proto3" json:"Database,omitempty"`
}

func (x *SetDLDataRequest) Reset() {
	*x = SetDLDataRequest{}
	mi := &file_dl_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDLDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDLDataRequest) ProtoMessage() {}

func (x *SetDLDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dl_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDLDataRequest.ProtoReflect.Descriptor instead.
func (*SetDLDataRequest) Descriptor() ([]byte, []int) {
	return file_dl_proto_rawDescGZIP(), []int{12}
}

func (x *SetDLDataRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

var File_dl_proto protoreflect.FileDescriptor

var file_dl_proto_rawDesc = []byte{
	0x0a, 0x08, 0x64, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x64, 0x6c, 0x22, 0x53,
	0x0a, 0x05, 0x44, 0x4c, 0x61, 0x70, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x6c, 0x2e, 0x44,
	0x4c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x64, 0x6c, 0x2e, 0x44, 0x4c, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x22, 0x52, 0x0a, 0x0a, 0x44, 0x4c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x44, 0x4c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x44, 0x4c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x54, 0x0a, 0x06, 0x44, 0x4c, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x21, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x64, 0x6c, 0x2e, 0x44, 0x4c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x62, 0x6a, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6c, 0x2e, 0x44, 0x4c, 0x44, 0x61, 0x74,
	0x61, 0x4f, 0x42, 0x4a, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x62, 0x6a, 0x22, 0x62, 0x0a,
	0x0c, 0x44, 0x4c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1c, 0x0a,
	0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44,
	0x4c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x4c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x87, 0x01, 0x0a, 0x07, 0x44, 0x4c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x7d, 0x0a, 0x09, 0x44,
	0x4c, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x42, 0x4a, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x4a, 0x0a, 0x06, 0x44, 0x4c,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x61, 0x6c, 0x22, 0x22, 0x0a, 0x10, 0x44, 0x4c, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x11, 0x44, 0x4c,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x05, 0x64, 0x6c, 0x41, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x64, 0x6c, 0x2e, 0x44, 0x4c, 0x61, 0x70, 0x70, 0x52, 0x05, 0x64, 0x6c, 0x41, 0x70, 0x70,
	0x22, 0x37, 0x0a, 0x0f, 0x44, 0x4c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x64, 0x6c, 0x2e, 0x44, 0x4c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x33, 0x0a, 0x10, 0x44, 0x4c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x05, 0x64, 0x6c, 0x41, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x64,
	0x6c, 0x2e, 0x44, 0x4c, 0x61, 0x70, 0x70, 0x52, 0x05, 0x64, 0x6c, 0x41, 0x70, 0x70, 0x22, 0x27,
	0x0a, 0x11, 0x73, 0x65, 0x74, 0x44, 0x4c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x2e, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x44, 0x4c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x32, 0x83, 0x02, 0x0a, 0x0a, 0x44, 0x4c, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x67, 0x65, 0x74, 0x44, 0x4c, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x14, 0x2e, 0x64, 0x6c, 0x2e, 0x44, 0x4c, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x15, 0x2e, 0x64, 0x6c, 0x2e, 0x44,
	0x4c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x35, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x4c, 0x12, 0x13, 0x2e, 0x64,
	0x6c, 0x2e, 0x44, 0x4c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x64, 0x6c, 0x2e, 0x44, 0x4c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x69, 0x6e, 0x69, 0x74, 0x44,
	0x4c, 0x12, 0x09, 0x2e, 0x64, 0x6c, 0x2e, 0x44, 0x4c, 0x61, 0x70, 0x70, 0x1a, 0x09, 0x2e, 0x64,
	0x6c, 0x2e, 0x44, 0x4c, 0x61, 0x70, 0x70, 0x12, 0x31, 0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x44,
	0x4c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x15, 0x2e, 0x64, 0x6c, 0x2e, 0x73, 0x65, 0x74, 0x44,
	0x4c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e,
	0x64, 0x6c, 0x2e, 0x44, 0x4c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x31, 0x0a, 0x0a, 0x69, 0x6e,
	0x69, 0x74, 0x44, 0x4c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x2e, 0x64, 0x6c, 0x2e, 0x73, 0x65,
	0x74, 0x44, 0x4c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d,
	0x2e, 0x64, 0x6c, 0x2e, 0x44, 0x4c, 0x44, 0x61, 0x74, 0x61, 0x4f, 0x42, 0x4a, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x64, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dl_proto_rawDescOnce sync.Once
	file_dl_proto_rawDescData = file_dl_proto_rawDesc
)

func file_dl_proto_rawDescGZIP() []byte {
	file_dl_proto_rawDescOnce.Do(func() {
		file_dl_proto_rawDescData = protoimpl.X.CompressGZIP(file_dl_proto_rawDescData)
	})
	return file_dl_proto_rawDescData
}

var file_dl_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_dl_proto_goTypes = []any{
	(*DLapp)(nil),             // 0: dl.DLapp
	(*DLMetadata)(nil),        // 1: dl.DLMetadata
	(*DLSpec)(nil),            // 2: dl.DLSpec
	(*DLCreateSpec)(nil),      // 3: dl.DLCreateSpec
	(*DLModel)(nil),           // 4: dl.DLModel
	(*DLDataOBJ)(nil),         // 5: dl.DLDataOBJ
	(*DLData)(nil),            // 6: dl.DLData
	(*DLGetRequestById)(nil),  // 7: dl.DLGetRequestById
	(*DLGetResponseById)(nil), // 8: dl.DLGetResponseById
	(*DLCreateRequest)(nil),   // 9: dl.DLCreateRequest
	(*DLCreateResponse)(nil),  // 10: dl.DLCreateResponse
	(*SetDLModelRequest)(nil), // 11: dl.setDLModelRequest
	(*SetDLDataRequest)(nil),  // 12: dl.setDLDataRequest
}
var file_dl_proto_depIdxs = []int32{
	1,  // 0: dl.DLapp.metadata:type_name -> dl.DLMetadata
	2,  // 1: dl.DLapp.spec:type_name -> dl.DLSpec
	4,  // 2: dl.DLSpec.model:type_name -> dl.DLModel
	5,  // 3: dl.DLSpec.dataObj:type_name -> dl.DLDataOBJ
	0,  // 4: dl.DLGetResponseById.dlApp:type_name -> dl.DLapp
	3,  // 5: dl.DLCreateRequest.spec:type_name -> dl.DLCreateSpec
	0,  // 6: dl.DLCreateResponse.dlApp:type_name -> dl.DLapp
	7,  // 7: dl.DLfunction.getDLById:input_type -> dl.DLGetRequestById
	9,  // 8: dl.DLfunction.createDL:input_type -> dl.DLCreateRequest
	0,  // 9: dl.DLfunction.initDL:input_type -> dl.DLapp
	11, // 10: dl.DLfunction.initDLModel:input_type -> dl.setDLModelRequest
	12, // 11: dl.DLfunction.initDLData:input_type -> dl.setDLDataRequest
	8,  // 12: dl.DLfunction.getDLById:output_type -> dl.DLGetResponseById
	10, // 13: dl.DLfunction.createDL:output_type -> dl.DLCreateResponse
	0,  // 14: dl.DLfunction.initDL:output_type -> dl.DLapp
	4,  // 15: dl.DLfunction.initDLModel:output_type -> dl.DLModel
	5,  // 16: dl.DLfunction.initDLData:output_type -> dl.DLDataOBJ
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_dl_proto_init() }
func file_dl_proto_init() {
	if File_dl_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dl_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dl_proto_goTypes,
		DependencyIndexes: file_dl_proto_depIdxs,
		MessageInfos:      file_dl_proto_msgTypes,
	}.Build()
	File_dl_proto = out.File
	file_dl_proto_rawDesc = nil
	file_dl_proto_goTypes = nil
	file_dl_proto_depIdxs = nil
}
