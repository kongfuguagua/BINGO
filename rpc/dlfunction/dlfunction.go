// Code generated by goctl. DO NOT EDIT.
// Source: dl.proto

package dlfunction

import (
	"context"

	"dl/rpc/dl"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DLCreateRequest   = dl.DLCreateRequest
	DLCreateResponse  = dl.DLCreateResponse
	DLCreateSpec      = dl.DLCreateSpec
	DLData            = dl.DLData
	DLDataOBJ         = dl.DLDataOBJ
	DLGetRequestById  = dl.DLGetRequestById
	DLGetResponseById = dl.DLGetResponseById
	DLMetadata        = dl.DLMetadata
	DLModel           = dl.DLModel
	DLSpec            = dl.DLSpec
	DLapp             = dl.DLapp
	SetDLDataRequest  = dl.SetDLDataRequest
	SetDLModelRequest = dl.SetDLModelRequest

	DLfunction interface {
		GetDLById(ctx context.Context, in *DLGetRequestById, opts ...grpc.CallOption) (*DLGetResponseById, error)
		CreateDL(ctx context.Context, in *DLCreateRequest, opts ...grpc.CallOption) (*DLCreateResponse, error)
		InitDL(ctx context.Context, in *DLapp, opts ...grpc.CallOption) (*DLapp, error)
		InitDLModel(ctx context.Context, in *SetDLModelRequest, opts ...grpc.CallOption) (*DLModel, error)
		InitDLData(ctx context.Context, in *SetDLDataRequest, opts ...grpc.CallOption) (*DLDataOBJ, error)
	}

	defaultDLfunction struct {
		cli zrpc.Client
	}
)

func NewDLfunction(cli zrpc.Client) DLfunction {
	return &defaultDLfunction{
		cli: cli,
	}
}

func (m *defaultDLfunction) GetDLById(ctx context.Context, in *DLGetRequestById, opts ...grpc.CallOption) (*DLGetResponseById, error) {
	client := dl.NewDLfunctionClient(m.cli.Conn())
	return client.GetDLById(ctx, in, opts...)
}

func (m *defaultDLfunction) CreateDL(ctx context.Context, in *DLCreateRequest, opts ...grpc.CallOption) (*DLCreateResponse, error) {
	client := dl.NewDLfunctionClient(m.cli.Conn())
	return client.CreateDL(ctx, in, opts...)
}

func (m *defaultDLfunction) InitDL(ctx context.Context, in *DLapp, opts ...grpc.CallOption) (*DLapp, error) {
	client := dl.NewDLfunctionClient(m.cli.Conn())
	return client.InitDL(ctx, in, opts...)
}

func (m *defaultDLfunction) InitDLModel(ctx context.Context, in *SetDLModelRequest, opts ...grpc.CallOption) (*DLModel, error) {
	client := dl.NewDLfunctionClient(m.cli.Conn())
	return client.InitDLModel(ctx, in, opts...)
}

func (m *defaultDLfunction) InitDLData(ctx context.Context, in *SetDLDataRequest, opts ...grpc.CallOption) (*DLDataOBJ, error) {
	client := dl.NewDLfunctionClient(m.cli.Conn())
	return client.InitDLData(ctx, in, opts...)
}
