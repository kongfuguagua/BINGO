// Code generated by goctl. DO NOT EDIT.
// Source: model.proto

package dlmodeler

import (
	"context"

	"dl/rpc/model/modeler"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	DLData            = modeler.DLData
	DLDataOBJ         = modeler.DLDataOBJ
	DLModel           = modeler.DLModel
	SetDLDataRequest  = modeler.SetDLDataRequest
	SetDLModelRequest = modeler.SetDLModelRequest

	DLModeler interface {
		InitDLModel(ctx context.Context, in *SetDLModelRequest, opts ...grpc.CallOption) (*DLModel, error)
		InitDLData(ctx context.Context, in *SetDLDataRequest, opts ...grpc.CallOption) (*DLDataOBJ, error)
	}

	defaultDLModeler struct {
		cli zrpc.Client
	}
)

func NewDLModeler(cli zrpc.Client) DLModeler {
	return &defaultDLModeler{
		cli: cli,
	}
}

func (m *defaultDLModeler) InitDLModel(ctx context.Context, in *SetDLModelRequest, opts ...grpc.CallOption) (*DLModel, error) {
	client := modeler.NewDLModelerClient(m.cli.Conn())
	return client.InitDLModel(ctx, in, opts...)
}

func (m *defaultDLModeler) InitDLData(ctx context.Context, in *SetDLDataRequest, opts ...grpc.CallOption) (*DLDataOBJ, error) {
	client := modeler.NewDLModelerClient(m.cli.Conn())
	return client.InitDLData(ctx, in, opts...)
}
